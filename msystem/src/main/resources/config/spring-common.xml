<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"  
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/cache
    http://www.springframework.org/schema/cache/spring-cache.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop.xsd
    http://www.springframework.org/schema/util
    http://www.springframework.org/schema/util/spring-util.xsd
    http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd
    ">


	<!-- 注解扫描包 -->
	<!-- <context:component-scan base-package="com.poobo" /> -->
	<!-- 自动扫描的包名 ，使Spring支持自动检测组件，如注解的Controller -->

	<context:component-scan base-package="com.xmzj.**.service" />



<!-- <context:property-placeholder location="classpath:redis.properties" /> -->
	<bean id="configProperties"
	  class="org.springframework.beans.factory.config.PropertiesFactoryBean">
	  <property name="locations">
	   <list>
	    <value>classpath:redis.properties</value>
	    <value>classpath:syncurl.properties</value>
	    <value>classpath:pay.properties</value>
		<value>classpath:email.properties</value>	   
	   </list>
	  </property>
	</bean>
	 <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer">
        <property name="properties" ref="configProperties" />
    </bean>   


      <!-- 该包下的类支持注解，表示会被当作{@code mybatis mapper}处理 配置了之后表示可以自动引入mapper类-->  
   <mybatis:scan base-package="com.xmzj.**.mapper"/>

	
	
	<!-- 配置连接数据库数据源 -->
	<bean id="dataSource"
		class="org.logicalcobwebs.proxool.ProxoolDataSource">
		<property name="driver"> 
                <value>com.mysql.jdbc.Driver</value> 
         </property> 
         <property name="driverUrl"> 
                 <value>jdbc:mysql://120.25.250.131:3306/nomnom</value> 
         </property> 
         <property name="user" value="root"/> 
         <property name="password" value="poobo2016"/> 
         <property name="maximumActiveTime" value="3600000"/> 
         <property name="prototypeCount" value="0"/> 
         <property name="maximumConnectionCount" value="5"/> 
         <property name="minimumConnectionCount" value="2"/> 
         <property name="simultaneousBuildThrottle" value="50"/> 
         
	</bean>
	
	

	<!-- 2. mybatis的SqlSession的工厂: SqlSessionFactoryBean dataSource:引用数据源 MyBatis定义数据源,同意加载配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
	<!-- 	<property name="configLocation" value="classpath:config/mybatis-config.xml" /> -->
		<property name="mapperLocations" value="classpath*:com/xmzj/**/*Mapper.xml"></property>
		
		
	</bean>

	<!-- 3. mybatis自动扫描加载Sql映射文件/接口 : MapperScannerConfigurer sqlSessionFactory 
		basePackage:指定sql映射文件/接口所在的包（自动扫描） -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.xmzj.**.mapper"></property>
		<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
	</bean>

	<!-- 4. 事务管理 : DataSourceTransactionManager dataSource:引用上面定义的数据源 -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>


	<!-- 5. 使用声明式事务 transaction-manager：引用上面定义的事务管理器 -->
	<tx:annotation-driven transaction-manager="txManager" />

	
	
	<!-- redis连接池的配置 -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxTotal" value="${redis.pool.maxActive}" />
		<property name="maxIdle" value="${redis.pool.maxIdle}" />
		<property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />
	</bean>

	<bean id="jedisConnectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="hostName" value="${redis.ip}" />
		<property name="port" value="${redis.port}" />
		<property name="poolConfig" ref="jedisPoolConfig" />
		<property name="timeout" value="5000" />
	</bean>

	<bean class="org.springframework.data.redis.core.RedisTemplate"
		p:connection-factory-ref="jedisConnectionFactory" />
	
	<bean id="messageSource"
     class="org.springframework.context.support.ResourceBundleMessageSource">
		 <property name="basenames">
 			<list>
 				<value>../messages</value>
 			 </list>
  		 </property>
  	</bean>

 
</beans>
